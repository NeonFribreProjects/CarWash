# Development image with full development dependencies
FROM node:20-alpine

# Install dependencies in a single layer
RUN apk add --no-cache \
    git \
    curl \
    openssl \
    openssl-dev \
    netcat-openbsd \
    libc6-compat

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY client/package*.json ./client/
COPY server/package*.json ./server/
COPY . .

# CRITICAL: Remove ALL node_modules and package-lock files
RUN rm -rf node_modules server/node_modules client/node_modules \
    && rm -f package-lock.json server/package-lock.json client/package-lock.json

# Install root dependencies WITHOUT workspaces first
RUN npm install --no-workspaces --no-audit --prefer-offline

# Install server dependencies in complete isolation
RUN cd server && npm install --no-audit --prefer-offline --force

# Install client dependencies
RUN cd client && npm install --no-audit --prefer-offline

WORKDIR /app

# Set permissions for entrypoint
COPY dev-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/dev-entrypoint.sh

EXPOSE 3000 5173